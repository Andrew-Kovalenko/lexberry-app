[{"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\index.js":"1","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\App.js":"2","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\sagas.js":"3","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\reducers\\rootReducer.js":"4","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\types.js":"5","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\DeclarantsBlock.js":"6","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\ClientBlock.js":"7","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\reducers\\clientsReducer.js":"8","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\reducers\\declarantsReducer.js":"9","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\Styles.js":"10","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\NewDeclartant.js":"11","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\showData.js":"12","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\actions.js":"13"},{"size":779,"mtime":1610738773861,"results":"14","hashOfConfig":"15"},{"size":265,"mtime":1610715246475,"results":"16","hashOfConfig":"15"},{"size":2269,"mtime":1610718296378,"results":"17","hashOfConfig":"15"},{"size":319,"mtime":1610715246477,"results":"18","hashOfConfig":"15"},{"size":468,"mtime":1610715246478,"results":"19","hashOfConfig":"15"},{"size":2119,"mtime":1610715647548,"results":"20","hashOfConfig":"15"},{"size":2674,"mtime":1610715637975,"results":"21","hashOfConfig":"15"},{"size":404,"mtime":1610715246477,"results":"22","hashOfConfig":"15"},{"size":784,"mtime":1610715246477,"results":"23","hashOfConfig":"15"},{"size":827,"mtime":1610715246476,"results":"24","hashOfConfig":"15"},{"size":4310,"mtime":1610716497439,"results":"25","hashOfConfig":"15"},{"size":437,"mtime":1610715246476,"results":"26","hashOfConfig":"15"},{"size":854,"mtime":1610715246477,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e7ag5x",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\index.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\App.js",[],["57","58"],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\sagas.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\reducers\\rootReducer.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\types.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\DeclarantsBlock.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\ClientBlock.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\reducers\\clientsReducer.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\reducers\\declarantsReducer.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\Styles.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\NewDeclartant.js",["59"],"import {Container, Box, TextField, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Button } from '@material-ui/core';\r\nimport React, {useState} from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useStyles} from './Styles';\r\nimport {useDispatch} from 'react-redux'\r\nimport {updateNewCurrentDeclarant, pushNewDeclarant, updateNewDeclarantsArray} from '../redux/actions'\r\n\r\nexport default function NewDeclartant({visibleForm, setVisibleForm}) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const [country, setCountry] = useState(['Украина', 'Грузия', 'Казахстан']);\r\n  const [currentCountry, setCurrentCountry] = useState();\r\n  const [declarant, setDeclarant] = useState({\r\n    businessEntity: '', \r\n    country: '', \r\n    name: '', \r\n    edrpou: '', \r\n    title: '', \r\n    adress: '', \r\n    motherlandTitle: '', \r\n    motherlandAdress: ''}\r\n  );\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(updateNewDeclarantsArray(declarant))\r\n    dispatch(pushNewDeclarant(declarant))\r\n    setVisibleForm()\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    setDeclarant({...declarant, [name]: value})\r\n    dispatch(updateNewCurrentDeclarant(declarant))\r\n  }\r\n\r\n  let AdditionalBlock;\r\n  if (currentCountry !== 'Украина') {\r\n    AdditionalBlock = \r\n    <Box className={classes.InputBox}>\r\n      <TextField value={declarant.motherlandTitle} onChange={handleInputChange} name=\"motherlandTitle\" fullWidth className={classes.Input} id=\"outlined-basic\" label=\"Назва мовою походження\" variant=\"outlined\" />\r\n      <TextField value={declarant.motherlandAdress} onChange={handleInputChange} name=\"motherlandAdress\" fullWidth className={classes.Input} id=\"outlined-basic\" label=\"Адреса мовою походження\" variant=\"outlined\" />\r\n    </Box>\r\n  } else {\r\n    AdditionalBlock = null\r\n  }\r\n\r\n  let form;\r\n  if (visibleForm) {\r\n    form =\r\n    <>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Додати нового</FormLabel>\r\n        <RadioGroup aria-label=\"businessEntity\" onChange={handleInputChange} name=\"businessEntity\" >\r\n          <FormControlLabel value=\"Private person\" control={<Radio  color=\"primary\"/>} label=\"Фізична особа\" />\r\n          <FormControlLabel value=\"Legal person\" control={<Radio  color=\"primary\"/>} label=\"Юридична особа\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <Container>\r\n        <Box>\r\n          <Autocomplete\r\n            onChange={(event, newValue) => {\r\n              setCurrentCountry(newValue)\r\n            }}\r\n            name=\"country\"\r\n            id=\"auto-complete\"\r\n            options={country}\r\n            getOptionLabel={(option) => option}\r\n            autoComplete\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Оберіть країну\" margin=\"normal\" />}\r\n          /> \r\n        </Box>\r\n        \r\n          <TextField value={declarant.name} onChange={handleInputChange} name=\"name\" fullWidth width='2' className={classes.Input} id=\"outlined-basic\" label=\"Ім'я\" variant=\"outlined\" />\r\n          <TextField value={declarant.edrpou} onChange={handleInputChange} name=\"edrpou\" fullWidth className={classes.Input} id=\"outlined-basic\" label=\"ЄДРПОУ\" variant=\"outlined\" />\r\n            <Box  className={classes.InputsBox}>\r\n              <Box  className={classes.InputBox}>\r\n                <TextField value={declarant.title} onChange={handleInputChange} className={classes.Input} name=\"title\" id=\"outlined-basic\" label=\"Назва\" variant=\"outlined\" />\r\n                <TextField value={declarant.adress} onChange={handleInputChange}  className={classes.Input} name=\"adress\" id=\"outlined-basic\" label=\"Адреса\" variant=\"outlined\" />\r\n              </Box>\r\n              {AdditionalBlock}\r\n            </Box>\r\n        </Container>\r\n        <Button onClick={handleSubmit}>Додати</Button>\r\n      </form>\r\n    </>\r\n  } else {\r\n    form = null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {form}\r\n    </>\r\n  )\r\n}","E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\components\\showData.js",[],"E:\\WebDev\\Projects\\TESK TASK FOR TAKE WORK\\lexberry-app\\src\\redux\\actions.js",[],["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":11,"column":19,"nodeType":"68","messageId":"69","endLine":11,"endColumn":29},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'setCountry' is assigned a value but never used.","Identifier","unusedVar",["72"],["73"],"no-global-assign","no-unsafe-negation"]